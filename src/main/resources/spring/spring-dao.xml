<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

<!-- Spring 整合 Mybatis 配置-->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <!--只配置数据库的时候使用-->
<!--<context:property-placeholder location="classpath:db.properties" ignore-unresolvable="true"/>-->
    <!--数据库和 Redis 加密配置时候使用-->
    <bean class="com.gjxaiou.util.EncryptPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"></property>
    </bean>

    <!--2.配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>

        <!--不使用主从库的时候配置数据库连接池属性-->
        <property name="driverClass" value="${jdbc.username}"></property>
        <property name="jdbcUrl"  value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>


<!--    &lt;!&ndash;配置主从库时候使用&ndash;&gt;-->
<!--    &lt;!&ndash;2.配置数据库连接池&ndash;&gt;-->
<!--    <bean id="abstractDataSource" abstract="true"-->
<!--          class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        &lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;-->
<!--        <property name="maxPoolSize" value="30"/>-->
<!--        <property name="minPoolSize" value="10"/>-->
<!--        &lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;-->
<!--        <property name="autoCommitOnClose" value="false"/>-->
<!--        &lt;!&ndash; 获取连接超时时间 &ndash;&gt;-->
<!--        <property name="checkoutTimeout" value="10000"/>-->
<!--        &lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;-->
<!--        <property name="acquireRetryAttempts" value="2"/>-->

<!--    </bean>-->

<!--    &lt;!&ndash;3.分别配置主从数据库属性&ndash;&gt;-->
<!--    <bean id="master" parent="abstractDataSource">-->
<!--        <property name="driverClass" value="${jdbc.Driver}"></property>-->
<!--        <property name="jdbcUrl" value="${jdbc.Master.url}"/>-->
<!--        <property name="user" value="${jdbc.Master.username}"/>-->
<!--        <property name="password" value="${jdbc.Master.password}"/>-->
<!--    </bean>-->

<!--    <bean id="slave" parent="abstractDataSource">-->
<!--        <property name="driverClass" value="${jdbc.Driver}"></property>-->
<!--        <property name="jdbcUrl" value="${jdbc.Slave.url}"/>-->
<!--        <property name="user" value="${jdbc.Slave.username}"/>-->
<!--        <property name="password" value="${jdbc.Slave.password}"/>-->
<!--    </bean>-->


<!--    &lt;!&ndash; 配置动态数据源，这里的 targetDataSources 就是路由数据源所对应的名称&ndash;&gt;-->
<!--    <bean id="dynamicDataSource" class="com.gjxaiou.dao.split.DynamicDataSource">-->
<!--        <property name="targetDataSources">-->
<!--            <map>-->
<!--                <entry value-ref="master" key="master"></entry>-->
<!--                <entry value-ref="slave"  key="slave"></entry>-->
<!--            </map>-->
<!--        </property>-->
<!--    </bean>-->



<!--    &lt;!&ndash;将这个 bean 放入连接池，做懒加载，因为得等 SQL 正式执行才将 DataSource指定&ndash;&gt;-->
<!--    <bean id="dataSource"-->
<!--          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">-->
<!--        <property name="targetDataSource">-->
<!--            <ref bean="dynamicDataSource"></ref>-->
<!--        </property>-->
<!--    </bean>-->


    <!--4.配置 SqlSessionFactory 对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 配置 MyBatis 全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.gjxaiou.entity"></property>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 5.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.gjxaiou.dao"/>
    </bean>

</beans>